# Example of Python code to test the lexical analyzer

def sum(a, b):
    # Function that returns the sum of two numbers
    return a + b

def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)

# Testing the functions
x = 10
y = 5.5
result_sum = sum(x, y)
result_factorial = factorial(5)

print("Sum result:", result_sum)
print("Factorial result:", result_factorial)

# Mathematical expressions
expression = (x + y) * 2 - 3 / 1.5
print("Expression result:", expression)

# Strings and special characters
message = "Hello, world! This is a test."
print(message)

# Lists and data structures
list_example = [1, 2, 3, 4, 5]
dictionary = {"key": "value", "number": 42}

# Comments and special cases
# This is a single-line comment


# Symbols and operators
symbols = "+-*/=<>!&|^~@#%{}[](),.;:?"

# Reserved words
reserved_words = [
    "False", "None", "True", "and", "as", "assert", "break", "class", "continue",
    "def", "del", "elif", "else", "except", "finally", "for", "from", "global",
    "if", "import", "in", "is", "lambda", "nonlocal", "not", "or", "pass", "raise",
    "return", "try", "while", "with", "yield"
]

# Numbers in different formats
integer = 42
float_number = 3.14
scientific = 6.022e23

# Unknown cases
strange_case = @#$%^&*